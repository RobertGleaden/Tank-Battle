<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 30;

if(!audio_is_playing(sndMusic1))
{
    audio_play_music(sndMusic1,true);
}

instance_deactivate_object(objTimer);
instance_deactivate_object(objFloorMaker);

health = 100;
isPaused = false;

// Globals
global.Ammo = 0;
global.Ammo = global.MaxAmmo;
global.hasSpawned = false;
global.loading = false;

objTimer.alarm[0] = -1;

if(place_meeting(x,y,objWall))
{
    move_random(32,32);
}

if(!instance_exists(objWall))
{
    scrMakeWalls();
}

global.gamepad = false;


if(global.gamepad = false)
{
    instance_create(0,0,objCrosshair);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(gamepad_is_connected(0))
{
        scrGamePad();
        global.gamepad = true;
}
else
{

if(keyboard_check(vk_up) || keyboard_check(ord('W')))
{
    motion_set(90,4);
}
if(keyboard_check(vk_down) || keyboard_check(ord('S')))
{
    motion_set(270,4);
}
if(keyboard_check(vk_right) || keyboard_check(ord('D')))
{
    motion_set(0,4);
}
if(keyboard_check(vk_left) || keyboard_check(ord('A')))
{
    motion_set(180,4);
}
if(keyboard_check(vk_nokey))
{
    speed = 0;
}

if(keyboard_check(vk_f2))
{
    room_goto(rmLevel);
}
if(keyboard_check_pressed(vk_escape))
{
    isPaused = !isPaused;
    if(isPaused = true)
    {
        instance_deactivate_object(objEnemy);
        if (instance_exists(objEnemyBullet))
        {
            instance_deactivate_object(objEnemyBullet);
        }
        
    }
    if(isPaused = false)
    {
        instance_activate_object(objEnemy);
        instance_activate_object(objBullet);
        instance_activate_object(objEnemyBullet);
        
    }    
}
if(isPaused = true)
{
    if(keyboard_check(ord('Q')))
    {
        room_goto(rmTitle);
    }
}


// Shooting

image_angle = point_direction(x,y,mouse_x,mouse_y)

if(mouse_check_button_pressed(mb_left) &amp;&amp; global.Ammo &gt; 0)
{
    bullet = instance_create(x + lengthdir_x(15,image_angle),y + lengthdir_y(15,image_angle),objBullet)
    bullet.direction = image_angle;
    bullet.speed = 5;
    global.Ammo -= 1;
    checkBulletSize();
}

}

if(global.Ammo &gt; global.MaxAmmo)
{
    global.Ammo = global.MaxAmmo;
}
if(global.Ammo &lt;= 0)
{
    room_goto(rmGameOver);
}

if(health &lt;= 0)
{
    instance_destroy();   
}

if(isPaused = false)
{
    if(!instance_exists(objEnemy))
    {
        room_goto(rmPowerup);
    }
}
    
if(x &gt; room_width)
{
    hspeed*=-1;
    x=room_width;
}
if(y &gt; room_height)
{
    vspeed*=-1;
}
if(x &lt; 0)
{
    hspeed*=-1;
    x=0;
}
if(y &lt; 0)
{
    vspeed*=-1;
    y=0;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_text(25,25,string(global.Ammo));

if(health &lt;= 100 &amp;&amp; health &gt; 80)
{
    draw_sprite(sprHealthBar,4,window_get_width() -256,0);   
}
if(health &lt;= 80 &amp;&amp; health &gt; 60)
{
    draw_sprite(sprHealthBar,3,window_get_width() - 256,0);
}
if(health &lt;= 60 &amp;&amp; health &gt; 40)
{
    draw_sprite(sprHealthBar,2,window_get_width() - 256,0);
}
if(health &lt;= 40 &amp;&amp; health &gt; 20)
{
    draw_sprite(sprHealthBar,1,window_get_width() - 256,0);
}
if(health &lt;= 20 &amp;&amp; health &gt; 0)
{
    draw_sprite(sprHealthBar,0,window_get_width() - 256,0);
}
if(isPaused = true)
{
    draw_rectangle_color(0,0,window_get_width(),window_get_height(),c_black,c_black,c_black,c_black,false);
    draw_set_color(c_white);
    draw_set_font(fntCredits);
    draw_text(288, 32, "Paused");
    draw_text(288,128, "HIT Q TO QUIT")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

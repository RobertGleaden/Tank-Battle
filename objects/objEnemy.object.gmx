<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemy</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;

fiveplayed = false;
fourplayed = false;
threeplayed = false;
twoplayed = false;
oneplayed = false;

hasShot = false;

randomize();

EnemyCount = floor(random_range(1,10));


if(global.hasSpawned = false)
{
  alarm[0] = 1;
  global.hasSpawned = true;
}


if(place_meeting(x,y,objWall))
{
    move_random(32,32);
}

alarm[1] = 30;  
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bullet = instance_create(x ,y ,objEnemyBullet);
bullet.speed = 3;
bullet.direction = point_direction(x,y,obj_player.x + random_range(0,40),obj_player.y + random_range(0,40));
hasShot = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(objEnemy) = 5 &amp;&amp; fiveplayed = false)
{
    audio_stop_all();
    audio_play_sound(sndFive,0,false);
    fiveplayed = true;
}

if(instance_number(objEnemy) = 4 &amp;&amp; fourplayed = false)
{
    audio_stop_all();
    audio_play_sound(sndFour,0,false);
    fourplayed = true;
}

if(instance_number(objEnemy) = 3 &amp;&amp; threeplayed = false)
{
    audio_stop_all();
    audio_play_sound(sndThree,0,false);
    threeplayed = true;
}

if(instance_number(objEnemy) = 2 &amp;&amp; twoplayed = false)
{
    audio_stop_all();
    audio_play_sound(sndTwo,0,false);
    twoplayed = true;
}

if(instance_number(objEnemy) = 1 &amp;&amp; oneplayed = false)
{
    audio_stop_all();
    audio_play_sound(sndOne,0,false);
    oneplayed = true;
}
alarm[1] = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(EnemyCount = 1)
{
    instance_create(random(room_width) , random(room_height),objEnemy); 
}
if(EnemyCount = 2)
{
    repeat (2) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 3)
{
    repeat (3) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 4)
{
    repeat (4) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 5)
{
    repeat (5) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 6)
{
    repeat (6) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 7)
{
    repeat (7) instance_create(random(room_width) , random(room_height), objEnemy);                   
}
if(EnemyCount = 8)
{
    repeat (8) instance_create(random(room_width),random(room_height),objEnemy);
}
if(EnemyCount = 9)
{
    repeat (9) instance_create(random(room_width) , random(room_height), objEnemy);
}
if(EnemyCount = 10)
{
    repeat (10) instance_create(random(room_width) , random(room_height), objEnemy);
}     

alarm[0] = - 1;
alarm[1] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;
if instance_exists(obj_player)
{
    if distance_to_object(obj_player) &gt; 200 &amp;&amp; distance_to_object(obj_player) &lt; 650
    {
        direction = point_direction(x,y,obj_player.x,obj_player.y);
        speed = 2;
    }
    
    if (distance_to_object(obj_player) &gt; 90 &amp;&amp; hasShot = false)
    {  
         alarm[2] = random_range(0,180);
         hasShot = true;
    }
    
}

if(!instance_exists(obj_player))
{
    room_goto(rmGameOver);
}

if(x &gt; room_width)
{
    hspeed*=-1;
    x=room_width;
}
if(y &gt; room_height)
{
    vspeed*=-1;
//    y=room_height;
}
if(x &lt; 0)
{
    hspeed*=-1;
    x=0;
}
if(y &lt; 0)
{
    vspeed*=-1;
    y=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_all(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_all(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objHealthPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = !direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objAmmoPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = !direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
with(objBullet)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
